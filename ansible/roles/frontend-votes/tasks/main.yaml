---
- name: Install Docker on EC2 instances
  hosts: frontend-vote
  become: true
  tasks:
    - name: Update apt packages (Ubuntu)
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install Docker
      apt:
        name: docker.io
        state: present
      when: ansible_os_family == "Debian"

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add user to Docker group
      user:
        name: ubuntu
        groups: docker
        append: yes
---
- name: Pull Docker image, create container, install dependencies, and run the Vote App
  hosts: frontend-vote 
  become: yes  
  tasks:
    - name: Pull the Python Docker image
      community.docker.docker_image:
        name: python:3.9  
        source: pull

    - name: Create and start the Docker container
      community.docker.docker_container:
        name: vote_app_container  
        image: python:3.9  
        state: started
        restart_policy: always  # This ensures the container restarts on failure
        ports:
          - "5000:5000"  
        volumes:
          - /ubuntu/home/vote:/app  # Mount the host directory to the container's app directory
        command: "/bin/bash -c 'cd /app && pip install -r requirements.txt && python app.py'"  # Install dependencies and run the app
        environment:
          FLASK_APP: app.py  # Optional: Set environment variables for the app
          FLASK_ENV: production  # Optional: Set the environment (production or development)

    - name: Wait for the application to start
      ansible.builtin.wait_for:
        host: "{{ ansible_host }}"
        port: 5000
        delay: 10
        timeout: 60
      when: server_process.rc == 0  # Wait for the application only if the previous task succeeded

    - name: Display success message
      debug:
        msg: "The Vote App is now running on http://localhost:5000"
